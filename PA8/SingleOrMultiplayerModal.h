#ifndef SINGLE_OR_MULTIPLAYER_MODAL_H
#define SINGLE_OR_MULTIPLAYER_MODAL_H

#include "Modal.h"
#include "TextComponent.h"

/// <summary>
/// This modal handles the single vs multiplayer workflow.
/// </summary>
class SingleOrMultiplayerModal : public Modal
{
public:
	/// <summary>
	/// Initializes the video mode that renders this modal.
	/// </summary>
	/// <param name="vm">The video mode that will render this component.</param>
	SingleOrMultiplayerModal(sf::VideoMode vm);

	~SingleOrMultiplayerModal();

	/// <summary>
	/// Draws this component to the provided window.
	/// </summary>
	/// <param name="window">The window to draw to.</param>
	void drawTo(sf::RenderWindow& window);

	/// <summary>
	/// Handles the events generated by the provided window.
	/// </summary>
	/// <param name="window">The window generating events.</param>
	void handleEvents(sf::RenderWindow& window);

	/// <summary>
	/// Returns true if the user selected single player mode.
	/// </summary>
	/// <returns>True if the user selected single player mode.</returns>
	bool getIsSinglePlayer();

	/// <summary>
	/// Returns true if the user is ready to have their selection processed.
	/// </summary>
	/// <returns>True if the user is ready to have their selection processed.</returns>
	bool getIsReady();

	/// <summary>
	/// Returns true if the user has cancelled and wants to return to the main menu.
	/// </summary>
	/// <returns>True if the user wants to go back to the main menu.</returns>
	bool getIsCancelling();

private:
	/// <summary>
	/// A pointer to the text component for the single player button.
	/// </summary>
	TextComponent* singlePlayerButton;

	/// <summary>
	/// A pointer to the text component for the multiplayer button.
	/// </summary>
	TextComponent* multiPlayerButton;

	/// <summary>
	/// A pointer to the text component for the cancel button.
	/// </summary>
	TextComponent* cancelButton;

	/// <summary>
	/// Process the mouse click from the user.
	/// </summary>
	/// <param name="mousePosition">The current mouse position.</param>
	void processMouseClick(sf::Vector2i mousePosition);

	/// <summary>
	/// Is set to true when the user selects single player mode.
	/// </summary>
	bool isSinglePlayerSelected;

	/// <summary>
	/// Is set to true when the user is ready for their selections to be processed.
	/// </summary>
	bool isReady;

	/// <summary>
	/// Is set to true when the user wants to exit this modal and return to the main menu.
	/// </summary>
	bool isCancelling;
};

#endif // !SINGLE_OR_MULTIPLAYER_MODAL_H
